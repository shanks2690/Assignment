version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass

  task1-publisher:
    build:
      context: ./task1-publisher
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    environment:
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      FILE_PATH: classpath:data.txt
    volumes:
      - ./task1-publisher/src/main/resources/data.txt:/app/build/resources/main/data.txt

  task1-consumer:
    build:
      context: ./task1-consumer
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    restart: on-failure
    environment:
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      DB_URL: jdbc:postgresql://db:5432/db
      DB_USER: user
      DB_PASSWORD: pass
    ports:
      - "8081:8080"

  task2-crud:
    build:
      context: ./task2-micronaut-crud
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_started
    restart: on-failure
    environment:
      DB_URL: jdbc:postgresql://db:5432/db
      DB_USER: user
      DB_PASSWORD: pass
    ports:
      - "8082:8080"

volumes:
  postgres_data:
